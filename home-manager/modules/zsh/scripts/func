#!/usr/bin/env bash
set -euo pipefail
IFS=$'\n\t'

cleanup() {
	:
}
trap "cleanup" EXIT

cmd() {
	"$@"
}

main() {
	# "$@"
	:
}

# main "$@"
if [[ $# == '0' ]]; then
	main
else
	"$@"
fi

to-big-emoji() {
	if (($# == 0)); then
		sed -E "s/([A-Z'a-z])/:big-\1:/g; s/ /:blank:/g" </dev/stdin
	else
		sed -E "s/([A-Z'a-z])/:big-\1:/g; s/ /:blank:/g" <<<"$@"
	fi
}

TERMINFO_SENT_CACHE="$XDG_CACHE_HOME/sent-terminfo"
send-terminfo() {
	local host
	host="$(echo "$@" | sed 's/.*@//g;s/:.*//g')"
	{
		if [[ ! -f "$TERMINFO_SENT_CACHE/$host" ]]; then
			echo "sending terminfo" >&2
			infocmp -x |
				sc-ssh-wrapper "$@" -- \
					'tmpfile="${TMPDIR:-${TMP:-/tmp}}/${user}.'"${TERM}"'.$$.terminfo"; dd of="$tmpfile" ; tic -x "$tmpfile" ; rm -f "$tmpfile"' 2>&1

			if sc-ssh-wrapper "$@" -- 'env TERM='"${TERM}"' infocmp -x 2>&1'; then
				# echo "The TERM '${TERM}' has been sent." 1>&2
				mkdir -p "$TERMINFO_SENT_CACHE"
				touch "$TERMINFO_SENT_CACHE/$host"
			else
				echo "ERROR: Failed to send the TERM '${TERM}'." >&2
				exit 1
			fi
		fi
	} 1>/dev/null
}

if [[ $TERM == "xterm-kitty"   ]]; then
	kitty-compatible-ssh-wrapper() {
		if [[ $# == 1 ]]; then
			send-terminfo "$@"
		fi
		ssh "$@"
	}
	alias ssh="kitty-compatible-ssh-wrapper"
fi
